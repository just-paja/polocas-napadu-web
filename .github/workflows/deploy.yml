---
name: Continuous deployment
on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*'

jobs:
  build:
    name: Build production packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - uses: ansible/ansible-lint-action@master
        with:
          targets: packages/website/deploy.yml
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm ci
          sudo apt-get -y install python-docker python3-docker
          ansible-galaxy install -r requirements-ansible.yml
      - name: Buld core
        run: npm run build:core
      - name: Test
        run: npm test -- --coverage
      - name: Build website
        run: npm run build
      - uses: actions/upload-artifacts@v2
        with:
          name: dist
          path: dist/
  
  deploy-polocas-napadu-website:
    name: Deploy polocas napadu website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifacts@v2
        with:
          name: dist
      - uses: ansible/ansible-lint-action@master
        with:
          targets: packages/website/deploy.yml
      - name: Install dependencies
        run: |
          sudo apt-get -y install python-docker python3-docker
          ansible-galaxy install -r requirements-ansible.yml
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRODUCTION_WEBSITE_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.PRODUCTION_WEBSITE_KNOWN_HOSTS }}
      - name: Deploy app
        env:
          NODE_SERVER_NAME: ${{ secrets.PRODUCTION_NODE_SERVER_NAME }}
          NODE_PROJECT_ENVIRONMENT: production
          NODE_API_URL: ${{ secrets.PRODUCTION_NODE_API_URL }}
          NODE_GA_CODE: ${{ secrets.PRODUCTION_NODE_GA_CODE }}
        run: |
          cp dist/polocas-napadu-website.tgz packages/website/
          cd ./packages/website
          echo -e "[web]\n${{ secrets.PRODUCTION_WEBSITE_DEPLOY_HOST }}\n" > inventory
          ansible-playbook deploy.yml -i inventory

  deploy-longforman-website-production:
    name: Deploy longforman website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifacts@v2
        with:
          name: dist
      - name: Install dependencies
        run: |
          sudo apt-get -y install python-docker python3-docker
          ansible-galaxy install -r requirements-ansible.yml
      - uses: ansible/ansible-lint-action@master
        with:
          targets: packages/website/deploy.yml
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRODUCTION_LONGFORMAN_WEBSITE_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.PRODUCTION_LONGFORMAN_WEBSITE_KNOWN_HOSTS }}
      - name: Deploy app
        env:
          NODE_SERVER_NAME: ${{ secrets.PRODUCTION_LONGFORMAN_NODE_SERVER_NAME }}
          NODE_PROJECT_ENVIRONMENT: production
          NODE_API_URL: ${{ secrets.PRODUCTION_LONGFORMAN_NODE_API_URL }}
          NODE_GA_CODE: ${{ secrets.PRODUCTION_LONGFORMAN_NODE_GA_CODE }}
        run: |
          cp dist/longforman-website.tgz packages/longforman-website/
          cd ./packages/longforman-website
          echo -e "[web]\n${{ secrets.PRODUCTION_LONGFORMAN_WEBSITE_DEPLOY_HOST }}\n" > inventory
          ansible-playbook deploy.yml -i inventory

  deploy-redirects:
    name: Deploy production website redirects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ansible/ansible-lint-action@master
        with:
          targets: packages/website/deploy-static.yml
      - name: Install dependencies
        run: ansible-galaxy install -r requirements-ansible.yml
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRODUCTION_WEBSITE_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.PRODUCTION_WEBSITE_KNOWN_HOSTS }}
      - name: Deploy app
        run: |
          cd ./packages/website
          echo -e "[web]\n${{ secrets.PRODUCTION_WEBSITE_DEPLOY_HOST }}\n" > inventory
          ansible-playbook deploy-static.yml -i inventory

  deploy-longforman-redirects:
    name: Deploy longforman production website redirects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ansible/ansible-lint-action@master
        with:
          targets: packages/longforman-website/deploy-static.yml
      - name: Install dependencies
        run: ansible-galaxy install -r requirements-ansible.yml
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRODUCTION_LONGFORMAN_WEBSITE_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.PRODUCTION_LONGFORMAN_WEBSITE_KNOWN_HOSTS }}
      - name: Deploy app
        run: |
          cd ./packages/longforman-website
          echo -e "[web]\n${{ secrets.PRODUCTION_LONGFORMAN_WEBSITE_DEPLOY_HOST }}\n" > inventory
          ansible-playbook deploy-static.yml -i inventory
